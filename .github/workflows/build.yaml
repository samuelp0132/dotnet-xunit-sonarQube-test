name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
        - name: Checkout Code
          uses: actions/checkout@v2
        
        - name: Setup .NET
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: '7.0.x'
        
        - name: Restore dependencies
          run: dotnet restore TestingApp/
        
        - name: Build
          run: dotnet build TestingApp/ --configuration Release

        - name: Run tests
          run: dotnet test TestingApp.Test --logger "trx;logfilename=TestingApp.Test/test_results.trx" --collect:"XPlat Code Coverage"
        
        - name: Check test results path
          run : cd TestingApp.Test&& cd TestResults && ls -la
        
        - name: Check test results
          run: |
            if [ -f TestingApp.Test/test_results.trx ]; then
              test_failures=$(grep -oP 'result="Failed"' TestingApp.Test/test_results.trx | wc -l)
              if [ $test_failures -gt 0 ]; then
                echo "Tests failed. Stopping deployment."
                exit 1 
              else
                echo "All tests passed. Proceeding with deployment."
              fi
            else
              echo "No test results found. Proceeding with deployment."
            fi
    
  build:
    needs: test
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"samuelp0132_dotnet-xunit-sonarQube-test" /o:"samuelp0132" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build TestingApp/
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"